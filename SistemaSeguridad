/* @file HelloKeypad.pde
|| @version 1.0
|| @author Alexander Brevig
|| @contact alexanderbrevig@gmail.com
||
|| @description
|| | Demonstrates the simplest use of the matrix Keypad library.
|| #
*/
#include <Keypad.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd(30,31,5,4,3,2);

const byte ROWS = 4; //four rows
const byte COLS = 3; //three columns
char keys[ROWS][COLS] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};
char contra[4] = {'1','2','3','4'};
char contraleida[4] ;
byte rowPins[ROWS] = {12,11,10,9}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {8,7,6}; //connect to the column pinouts of the keypad

//byte rowPins[ROWS] = {5, 4, 3, 2}; //connect to the row pinouts of the keypad
//byte colPins[COLS] = {8, 7, 6}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

int pos = 0;
int pinrojo= 32;
int pinverde = 33;
int pinamarillo = 34;
int intentos = 0 ;

void setup(){
  lcd.begin(16,2);
  lcd.setCursor(0,0);
  lcd.print("Simons security");
  delay(2000);
  //Serial.begin(9600);
  pinMode(pinrojo, OUTPUT);
  pinMode(pinverde, OUTPUT);
  pinMode(pinamarillo, OUTPUT);
}
 
void loop(){
  digitalWrite(pinrojo, HIGH); // enciende
  digitalWrite(pinverde, LOW); // apaga
  digitalWrite(pinamarillo, LOW); // apaga
  delay(500);
  digitalWrite(pinrojo, LOW);   
  digitalWrite(pinverde, HIGH); 
  digitalWrite(pinamarillo, LOW); 
  delay(500); 
  digitalWrite(pinrojo, LOW); 
  digitalWrite(pinverde, LOW); 
  digitalWrite(pinamarillo, HIGH); 
  delay(500);
  char key = keypad.getKey();
  contraleida[pos]= key;
  if (key){
    lcd.setCursor(pos++,1);
    lcd.print(key);
    Serial.println(key);
  }
  if(pos > 3){
    if(validar() == true){
      digitalWrite(pinverde, HIGH);
      digitalWrite(pinrojo, LOW);
      digitalWrite(pinamarillo, LOW);
      lcd.setCursor(0,1);
      lcd.print("Clave correcta");
      lcd.setCursor(0,1);
      delay(3000);
      lcd.print("                ");
    }
    else{
      digitalWrite(pinverde, LOW);
      digitalWrite(pinrojo, LOW);
      digitalWrite(pinamarillo, HIGH);
      lcd.setCursor(0,1);
      lcd.print("Clave incorrecta");
      delay(3000);
      lcd.setCursor(0,1);
      lcd.print("                ");
      intentos++;
    }
    pos = 0;
  }
  if(intentos == 3){
    digitalWrite(pinverde, LOW);
    digitalWrite(pinrojo, HIGH);
    digitalWrite(pinamarillo, LOW);
    lcd.setCursor(0,1);
    lcd.print("Sistema bloqueado.");
    delay(5000);
   
  }
}
boolean validar(){
  int contAux = 0;
  for(int i = 0 ; i<5;i++){
      if(contra[i] == contraleida[i]){
        contAux++;
      }
   }
   if(contAux==4){
      return true;
   }
   return false;
}
